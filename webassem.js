'use strict'

let module1 = (e=> {
  let script_name = typeof document != 'undefined' ? document.currentScript?.src : undefined
  if (typeof __filename != 'undefined') script_name ||= __filename
  return (
    function(moduleArg = {}) {
    let moduleRtn

    let module1=moduleArg;let readyPromiseResolve,readyPromiseReject;let readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});let ENVIRONMENT_IS_WEB=typeof window=="object";let ENVIRONMENT_IS_WORKER=typeof importScripts=="function";let ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){}let moduleOverrides=Object.assign({},module1);let arguments_=[];let thisProgram="./this.program";let quit_=(status,toThrow)=>{throw toThrow};let scriptDirectory="";function locateFile(path){if(module1["locateFile"]){return module1["locateFile"](path,scriptDirectory)}return scriptDirectory+path}let readAsync,readBinary;if(ENVIRONMENT_IS_NODE){let fs=require("fs");let nodePath=require("path");scriptDirectory=__dirname+"/";readBinary=filename=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);let ret=fs.readFileSync(filename);return ret};readAsync=(filename,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return new Promise((resolve,reject)=>{fs.readFile(filename,binary?undefined:"utf8",(err,data)=>{if(err)reject(err);else resolve(binary?data.buffer:data)})})};if(!module1["thisProgram"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\/g,"/")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(script_name){scriptDirectory=script_name}if(scriptDirectory.startsWith("blob:")){scriptDirectory=""}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1)}{if(ENVIRONMENT_IS_WORKER){readBinary=url=>{let xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=url=>{if(isFileURI(url)){return new Promise((reject,resolve)=>{let xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){resolve(xhr.response)}reject(xhr.status)};xhr.onerror=reject;xhr.send(null)})}return fetch(url,{credentials:"same-origin"}).then(response=>{if(response.ok){return response.arrayBuffer()}return Promise.reject(new Error(response.status+" : "+response.url))})}}}else{}let out=module1["print"]||console.log.bind(console);let err=module1["printErr"]||console.error.bind(console);Object.assign(module1,moduleOverrides);moduleOverrides=null;if(module1["arguments"])arguments_=module1["arguments"];if(module1["thisProgram"])thisProgram=module1["thisProgram"];if(module1["quit"])quit_=module1["quit"];let wasmBinary;if(module1["wasmBinary"])wasmBinary=module1["wasmBinary"];let wasmMemory;let ABORT=false;let EXITSTATUS;let HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){let b=wasmMemory.buffer;module1["HEAP8"]=HEAP8=new Int8Array(b);module1["HEAP16"]=HEAP16=new Int16Array(b);module1["HEAPU8"]=HEAPU8=new Uint8Array(b);module1["HEAPU16"]=HEAPU16=new Uint16Array(b);module1["HEAP32"]=HEAP32=new Int32Array(b);module1["HEAPU32"]=HEAPU32=new Uint32Array(b);module1["HEAPF32"]=HEAPF32=new Float32Array(b);module1["HEAPF64"]=HEAPF64=new Float64Array(b)}let __ATPRERUN__=[];let __ATINIT__=[];let __ATPOSTRUN__=[];let runtimeInitialized=false;function preRun(){if(module1["preRun"]){if(typeof module1["preRun"]=="function")module1["preRun"]=[module1["preRun"]];while(module1["preRun"].length){addOnPreRun(module1["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(module1["postRun"]){if(typeof module1["postRun"]=="function")module1["postRun"]=[module1["postRun"]];while(module1["postRun"].length){addOnPostRun(module1["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}let runDependencies=0;let runDependencyWatcher=null;let dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;module1["monitorRunDependencies"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;module1["monitorRunDependencies"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){let callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){module1["onAbort"]?.(what);what="Aborted("+what+")";err(what);ABORT=true;EXITSTATUS=1;what+=". Build with -sASSERTIONS for more info.";let e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}let dataURIPrefix="data:application/octet-stream;base64,";let isDataURI=filename=>filename.startsWith(dataURIPrefix);let isFileURI=filename=>filename.startsWith("file://");function findWasmBinary(){let f="add.wasm";if(!isDataURI(f)){return locateFile(f)}return f}let wasmBinaryFile;function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw"both async and sync fetching of the wasm failed"}function getBinaryPromise(binaryFile){if(!wasmBinary){return readAsync(binaryFile).then(response=>new Uint8Array(response),()=>getBinarySync(binaryFile))}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming=="function"&&!isDataURI(binaryFile)&&!isFileURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch=="function"){return fetch(binaryFile,{credentials:"same-origin"}).then(response=>{let result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function getWasmImports(){return{a:wasmImports}}function createWasm(){let info=getWasmImports();function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports["a"];updateMemoryViews();addOnInit(wasmExports["b"]);removeRunDependency("wasm-instantiate");return wasmExports}addRunDependency("wasm-instantiate");function receiveInstantiationResult(result){receiveInstance(result["instance"])}if(module1["instantiateWasm"]){try{return module1["instantiateWasm"](info,receiveInstance)}catch(e){err(`module1.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}if(!wasmBinaryFile)wasmBinaryFile=findWasmBinary();instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}let callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(module1)}};let noExitRuntime=module1["noExitRuntime"]||true;let wasmImports={};let wasmExports=createWasm();let ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports["b"])();let _add=module1["_add"]=(a0,a1)=>(_add=module1["_add"]=wasmExports["c"])(a0,a1);let calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;module1["calledRun"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(module1);module1["onRuntimeInitialized"]?.();postRun()}if(module1["setStatus"]){module1["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){module1["setStatus"]("")},1);doRun()},1)}else{doRun()}}if(module1["preInit"]){if(typeof module1["preInit"]=="function")module1["preInit"]=[module1["preInit"]];while(module1["preInit"].length>0){module1["preInit"].pop()()}}run();moduleRtn=readyPromise;

    return moduleRtn
    }
  );
})();

if (typeof exports === 'object' && typeof module === 'object') module.exports = module1;
else if (typeof define === 'function' && define['amd']) define([], () => module1);